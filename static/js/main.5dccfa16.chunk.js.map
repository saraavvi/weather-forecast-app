{"version":3,"sources":["contexts/WeatherContext.js","components/SearchForm.jsx","Icons.js","components/MainCard.jsx","components/DailyCard.jsx","components/DailyCardContainer.jsx","components/InfoText.jsx","pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["WeatherContext","createContext","StyledForm","styled","form","FormContainer","div","SearchForm","useContext","setCityInput","cityInput","getWeather","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","icon","Clear","Clouds","Snow","Rain","Card","DetailContainer","MainCard","kToC","currentData","weather","main","temp","feelsLike","feels_like","weatherDescription","description","windSpeed","wind","speed","humidity","localStorage","getItem","className","DailyCard","weekday","DisplayCards","DailyCardContainer","dateToDay","dailyData","map","item","index","dt_txt","Message","p","Welcome","h1","InfoText","HomePage","kelvin","Math","round","useEffect","city","date","moment","format","App","useState","setCurrentData","setDailyData","Provider","fetch","process","then","res","json","data","list","setItem","daily","filter","includes","catch","err","alert","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dccfa16.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\n\nexport const WeatherContext = createContext();\n","import React, { useContext } from \"react\";\nimport { WeatherContext } from \"../contexts/WeatherContext\";\nimport styled from \"styled-components\";\n\n\n\nconst StyledForm = styled.form`\n  input {\n    width: 100%;\n    height: 3rem;\n    opacity: 0.3;\n    border-radius: 0.3rem;\n    border: none;\n    padding: 0.5rem;\n    &:hover {\n      opacity: 0.7;\n    }\n    &:focus {\n      opacity: 0.7;\n      outline: none;\n    }\n  }\n`;\n\nconst FormContainer = styled.div`\n  margin-top: 2rem;\n  width: 50%;\n`;\n\nexport default function SearchForm() {\n  const { setCityInput, cityInput, getWeather } = useContext(WeatherContext);\n\n  function handleOnChange(e) {\n    setCityInput(e.target.value);\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    getWeather(cityInput);\n    setCityInput(\"\");\n  }\n\n  return (\n    <FormContainer>\n      <StyledForm onSubmit={handleOnSubmit}>\n        <input\n          value={cityInput}\n          onChange={handleOnChange}\n          type=\"text\"\n          placeholder=\"Type the name of a city and press enter\"\n        ></input>\n      </StyledForm>\n    </FormContainer>\n  );\n}\n","export const icon = {\n  Clear: \"wi wi-day-sunny \",\n  Clouds: \"wi wi-cloud \",\n  Snow: \"wi wi-snow \",\n  Rain: \"wi wi-rain\",\n};\n","import React, { useContext } from \"react\";\nimport { WeatherContext } from \"../contexts/WeatherContext\";\nimport styled from \"styled-components\";\nimport { icon } from \"../Icons\";\n\nconst Card = styled.div`\n  text-align: center;\n  color: white;\n  // display: flex;\n  // border: 1px solid white;\n  h1 {\n    font-size: 3.5rem;\n  }\n  h2 {\n    font-size: 4rem;\n  }\n  h3 {\n    font-size: 1.7rem;\n  }\n`;\nconst DetailContainer = styled.div`\n  margin: 1rem;\n  p {\n    margin: 0;\n  }\n`;\n\nexport default function MainCard({ kToC }) {\n  const { currentData } = useContext(WeatherContext);\n  const weather = currentData.weather[0].main;\n  const temp = kToC(currentData.main.temp);\n  const feelsLike = kToC(currentData.main.feels_like);\n  const weatherDescription = currentData.weather[0].description;\n  const windSpeed = currentData.wind.speed;\n  const humidity = currentData.main.humidity;\n\n  return (\n    <Card>\n      <div>\n        <h1>{localStorage.getItem(\"cityName\")}</h1>\n        <h3>{weatherDescription}</h3>\n        <i className={`${icon[weather]} display-1`}></i>\n        <h2>{temp}°C</h2>\n      </div>\n      <div className=\"d-flex\">\n        <DetailContainer>\n          <i className=\"wi wi-strong-wind\"></i>\n          <div>\n            <p>Wind Speed</p>\n            {windSpeed} m/s\n          </div>\n        </DetailContainer>\n        <DetailContainer>\n          <i className=\"wi wi-humidity\"></i>\n          <p>Humidity</p>\n          {humidity}%\n        </DetailContainer>\n        <DetailContainer>\n          <i className=\"wi wi-thermometer\"></i>\n          <p>Feels Like</p>\n          <p>{feelsLike}°C</p>\n        </DetailContainer>\n      </div>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { icon } from \"../Icons\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  text-align: center;\n  // padding: 2rem;\n  width: 100%;\n  color: white;\n  //   border: 1px solid white;\n  p {\n    font-size: 1.2rem;\n  }\n\n  @media (max-width: 768px) {\n    p {\n      font-size: 1rem;\n    }\n    h4 {\n      font-size: 1rem;\n    }\n  }\n`;\n\nexport default function DailyCard({\n  weekday,\n  temp,\n  weather,\n  weatherDescription,\n}) {\n  return (\n    <Card className=\"col-md-2\">\n      <h4>{weekday}</h4>\n      <p>{temp}°C</p>\n      <i className={`${icon[weather]} display-4`}></i>\n      <p>{weatherDescription} </p>\n    </Card>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { WeatherContext } from \"../contexts/WeatherContext\";\nimport DailyCard from \"../components/DailyCard\";\nimport styled from \"styled-components\";\n\nconst DisplayCards = styled.div`\ndisplay: flex;\njustify-content: space-between;\n@media (max-width: 576px) {\n  display: none;\n}\n`;\n\n\nexport default function DailyCardContainer({ kToC, dateToDay }) {\n  const { dailyData } = useContext(WeatherContext);\n  return (\n    <DisplayCards>\n      {dailyData.map((item, index) => {\n        const weekday = dateToDay(item.dt_txt);\n        const temp = kToC(item.main.temp);\n        const weather = item.weather[0].main;\n        const weatherDescription = item.weather[0].description;\n        return (\n          <DailyCard\n            key={index}\n            weekday={weekday}\n            temp={temp}\n            weather={weather}\n            weatherDescription={weatherDescription}\n          />\n        );\n      })}\n    </DisplayCards>\n  );\n}\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Message = styled.p`\n  color: white;\n  font-size: 2rem;\n  text-align: center;\n`;\n\nconst Welcome = styled.h1`\n  color: white;\n  text-align: center;\n`;\n\nexport default function InfoText() {\n    return (\n        <div>\n            <Welcome>Welcome,</Welcome>\n            <Message>please search for a city to get weather forecast.</Message>\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { WeatherContext } from \"../contexts/WeatherContext\";\nimport SearchForm from \"../components/SearchForm\";\nimport \"weather-icons/css/weather-icons.css\";\nimport MainCard from \"../components/MainCard\";\nimport DailyCardContainer from \"../components/DailyCardContainer\";\nimport InfoText from \"../components/InfoText\";\n\nexport default function HomePage() {\n  const { currentData, dailyData, getWeather } = useContext(WeatherContext);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cityName\")) {\n      const city = localStorage.getItem(\"cityName\");\n      getWeather(city);\n    }\n  }, []);\n\n  function kToC(kelvin) {\n    let celcius = Math.round(kelvin - 273.15);\n    return celcius;\n  }\n\n  function dateToDay(dt_txt) {\n    let date = dt_txt;\n    let weekday = moment(date).format(\"dddd\");\n    return weekday;\n  }\n  if (localStorage.getItem(\"cityName\")) {\n    return (\n      <div className=\"container-fluid vh-100 d-flex flex-column\">\n        <div className=\"row\">\n          <div className=\"col-md-12 d-flex justify-content-center\">\n            <SearchForm />\n          </div>\n        </div>\n\n        <div className=\"row mt-5 pt-2\">\n          <div className=\"col-md-12 d-flex justify-content-center\">\n            {currentData && <MainCard kToC={kToC} />}\n          </div>\n        </div>\n\n        <div className=\"row flex-grow-1 align-items-center pt-2\">\n          <div className=\"col-md-12 d-flex justify-content-center\">\n            {dailyData && (\n              <DailyCardContainer kToC={kToC} dateToDay={dateToDay} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container-fluid vh-100 d-flex flex-column\">\n        <div className=\"row m-auto\">\n          <div className=\"col-md-12 d-flex justify-content-center\">\n            <InfoText />\n          </div>\n          <div className=\"col-md-12 d-flex justify-content-center\">\n            <SearchForm />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport { WeatherContext } from \"./contexts/WeatherContext\";\n\nfunction App() {\n  const [cityInput, setCityInput] = useState(\"\");\n  const [currentData, setCurrentData] = useState(null);\n  const [dailyData, setDailyData] = useState(null);\n\n  function getWeather(city) {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${process.env.REACT_APP_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setCurrentData(data.list[0]);\n        localStorage.setItem(\"cityName\", city);\n        const daily = data.list.filter((item) => {\n          return item.dt_txt.includes(\"12:00:00\");\n        })\n        setDailyData(\n          daily\n        );\n      })\n      .catch((err) => alert(\"City does not exist\"));\n  }\n\n  return (\n\n    <div>\n      <WeatherContext.Provider\n        value={{\n          cityInput,\n          setCityInput,\n          currentData,\n          setCurrentData,\n          dailyData,\n          setDailyData,\n          getWeather,\n        }}\n      >\n        <Switch>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </WeatherContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}